---
export interface Props {
	pid: number;
}

import Layout from "../layouts/Layout.astro";
import { supabase } from "../lib/backend";
import type { Documentation, Language, Comments } from "../lib/db";
import Search from "./svelte/search.svelte";

const { pid } = Astro.props

const { data, error } = await supabase
    .from("Documentation")
    .select("*")
    .order("id", { ascending: false });

    const docs: Documentation[]=data as Documentation[];
    const filteredDocs = docs.filter((doc) => doc.lang === pid);
    
    const { data: { user } } = await supabase.auth.getUser()

    // search
    let search = "";
    function searchDocs() {
        search = (document.getElementById("inp") as HTMLInputElement).value;
        console.log(search);
    }

    let language: Language[] = data as Language[];
        const { data:d, error:e } = await supabase.from("Language").select("*").eq("id", pid);
        if (error) {
            console.log(error);
        } else {
            language = d as Language[];
            console.log(d);
        }

    const { data: searchResults, error: er} = await supabase
        .from("Documentation")
        .select("*")
        .ilike("title", `%${search}%`)
        .order("id", { ascending: false })
        .limit(10)
        
        let searchResultsDocs: Documentation[]=searchResults as Documentation[];

---

<Layout title="LangPlace">
    <p class="text-2xl sm:text-2xl text-white text-center font-bold"><span class="w-96">Documentation for {language[0]?.title}</span></p>
    <!-- description -->
    <p class="text-sm sm:text-lg text-white text-center"><span class="w-72">{language[0]?.description}</span></p>
    
    <Search client:only="svelte" currLocation={"Documentation"} path={"docs"} />
    <div class=" flex flex-col sm:row-2 gap-10 place-items-center sm:justify-center">
    {filteredDocs && filteredDocs.map((doc: Documentation) => (
        <div class="flex flex-row text-white w-96 sm:w-7/12 h-auto bg-slate-900 rounded-xl outline-dashed outline-gray-400 justify-between mt-2">
            <div class="flex flex-col">
                <h1 class="text-left pl-3 text-lg sm:text-2xl pt-2 pb-4 font-bold">{doc.title}</h1>
                <p class="text-left pl-3 text-sm sm:text-lg pt-2 pb-2 truncate">{doc.description}</p>
            </div>
            <div class="flex flex-row justify-end">
            <button class="bg-blue-800 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-r-xl"  onclick={`window.location = "/docs/${doc.id}"`}>
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-4 sm:w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                </svg>
            </button>
            </div>
            </div>
    ))}
    </div>
</Layout>