---
export interface Props {
	pid: number;
}

import Layout from "../layouts/Layout.astro";
import { supabase } from "../lib/backend";
import type { Session } from "@supabase/supabase-js";

import type { Contents, Documentation } from "../lib/db";
import { bind } from "svelte/internal";
import type { SupabaseAuthClient } from "@supabase/supabase-js/dist/module/lib/SupabaseAuthClient";

const { pid } = Astro.props

const { data, error } = await supabase
// get both contents and documentation table
    .from('Contents')
    .select('*')



    const contentText: Contents[]=data as Contents[];
    // filter by pid
    const content = contentText.filter((con: Contents) => con.connect === pid);

    const doc: Documentation[] = (await supabase.from('Documentation').select('*').eq('id', pid)).data as Documentation[]
    const { title, description } = doc[0];


    console.log(content);
    console.log(doc);
---

<Layout title="Docs">
    <div class="flex text-white flex-col gap-2">
        <p class=" text-center text-2xl">{title}</p>
        <p class=" text-center text-xl">{description}</p>
    </div>
    <div>
        <div class="flex flex-col p-10">
        {content && content.map((con: Contents) => (
            <div class="text-white">
                <p>{con.text}</p>
            </div>
        ))}
        </div>
    </div>
</Layout>