---
 import { supabase } from "../lib/backend";
 import type { Language , Documentation, Users } from "../lib/db";
 import Logout from "../components/logout.svelte";
 import Layout from "../layouts/Layout.astro";
 import Search from "../components/svelte/search.svelte";
 import Ldocs from "../components/svelte/latestdocs.svelte";

 const currentUser = (await supabase.auth.getUser(Astro.cookies.get("my-access-token").value)).data.user as any;

    const { data, error } = await supabase
        .from("Language")
        .select("*")
    // .order("id", { ascending: false });

    const lang: Language[]=data as Language[];

    const { data: d, error: docsError } = await supabase
        .from("Documentation")
        .select("*")
        // order by the time created
        .order("created_at", { ascending: false })

    let name = "";

    // if the currentUser has user.user_metadata.name then set the name to that or else set it to the user.user_metadata.name
    if (currentUser) {
        if (currentUser.user_metadata.raw_user_metadata.name) {
            name = currentUser.user_metadata.raw_user_metadata.name;
        } else {
            name = currentUser.user_metadata.name;
        }
    }
---
 
<script>
    import { supabase } from "../lib/backend";
    const { data: { user } } = await supabase.auth.getUser()
    if (!user) {
        // window.location.href = "/"
    }else {        
        // window.location.href = "/dashboard"
        // change the user's name to John Doe

}
</script>
<Layout title="Dashboard" loggedIn={true}>
	<script async src="https://www.googletagmanager.com/gtag/js?id=G-6G5JS7QPYS"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
      
        gtag('config', 'G-6G5JS7QPYS');
      </script>
    <div class="flex flex-col">
    <div class="flex flex-row gap-24 mx-auto">
    {currentUser && <img src={`https://avatars.dicebear.com/api/bottts/${currentUser.id}.svg`} id="Avatar" class="w-32 h-32 rounded-full mt-10" />}
    {!currentUser && <img src={`https://avatars.dicebear.com/api/bottts/${Math.random()}.svg`} id="Avatar" class="w-32 h-32 rounded-full mt-10" />}
    <div class="">
    {currentUser && <p class="text-white text-center text-2xl mt-6 font-bold">Welcome {name}</p>}
    {!currentUser && <p class="text-white text-center text-2xl mt-6 font-bold">Welcome</p>}
    <!-- made with ❤️ by @RangerDevv -->
    <p class="text-white text-center text-sm mt-6">Made with ❤️ by <a href="https://github.com/RangerDevv" class="text-blue-500">RangerDevv</a></p>
    </div>
    </div>
    <div class="rounded-lg self-center sm:pt-0 pt-6">
    <p class="text-white text-center text-2xl font-bold">Languages</p>
    <!--  -->
    <div class="pt-3 w-full gap-6 grid md:grid-cols-3 2xl:grid-cols-5 sm:grid-cols-2 grid-cols-1 items-center">
    {lang?.map(l => (
        // transition to gradient on hover
    <div class="flex flex-col justify-items-center text-white w-80 h-80 bg-zinc-900 bg-gradient-to-bl hover:from-zinc-900 hover:to-gray-900 rounded-xl outline-dashed outline-gray-400 cursor-pointer transition duration-500 ease-in-out transform hover:-translate-y-1.5 hover:scale-100" onclick={`window.location = "/language/${l.id}"`}>
        <div>
            <p class="text-center text-3xl pt-2 pb-7 font-bold from-slate-800 via-black to-slate-900 bg-gradient-to-r h-24 w-72 mt-3 rounded-xl self-center items-center mx-auto hover:from-slate-900 hover:to-slate-800 hover:via-black">{l.title}</p>
            <p class="text-center text-sm p-4" id="desc">{l.description}</p>
        </div>
        </div>
    ))}
    </div>
</div>
</div>
</Layout>

<style>
    /* slight avatar floating effect */
    #Avatar {
        animation: float 3s ease-in-out infinite;
    }
    @keyframes float {
        0% {
            transform: translateY(0);
        }
        50% {
            transform: translateY(-15px);
        }
        100% {
            transform: translateY(0);
        }
    }
</style>